{"ast":null,"code":"var _jsxFileName = \"/Users/adamsmith/Desktop/Chronos_Interactive/ci-challenge-2/src/TableContainer.js\",\n    _s = $RefreshSig$();\n\nimport { React } from \"react\";\nimport { useTable, useFilters, useGlobalFilter } from \"react-table\";\nimport { GlobalFilter } from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    state,\n    visibleColumns,\n    prepareRow,\n    setGlobalFilter,\n    preGlobalFilteredRows\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useGlobalFilter);\n  const topHeaders = {\n    related_product: \"Product/Tool\",\n    asset_type: \"Category\",\n    release_version: \"Release Version\",\n    version_type: \"Release Type\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => topHeaders[column.id] ? /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [topHeaders[column.id], /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render(\"Filter\") : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: visibleColumns.length,\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(GlobalFilter, {\n              preGlobalFilteredRows: preGlobalFilteredRows,\n              globalFilter: state.globalFilter,\n              setGlobalFilter: setGlobalFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => column.id !== 'version_type' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"th\",\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return cell.column.Header !== 'VersionType' ? /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 65\n              }, this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"JVAx5dNal8H0nZ3MpOA7VINhfSE=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useTable","useFilters","useGlobalFilter","GlobalFilter","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","state","visibleColumns","prepareRow","setGlobalFilter","preGlobalFilteredRows","topHeaders","related_product","asset_type","release_version","version_type","map","headerGroup","getHeaderGroupProps","headers","column","id","getHeaderProps","canFilter","render","length","textAlign","globalFilter","row","i","getRowProps","cells","cell","Header","getCellProps"],"sources":["/Users/adamsmith/Desktop/Chronos_Interactive/ci-challenge-2/src/TableContainer.js"],"sourcesContent":["import { React } from \"react\";\nimport { useTable, useFilters, useGlobalFilter } from \"react-table\";\nimport { GlobalFilter } from \"./Filter\";\n\nexport default function Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    state,\n    visibleColumns,\n    prepareRow,\n    setGlobalFilter,\n    preGlobalFilteredRows,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useFilters,\n    useGlobalFilter\n  );\n\n  const topHeaders = {\n    related_product: \"Product/Tool\",\n    asset_type: \"Category\",\n    release_version: \"Release Version\",\n    version_type: \"Release Type\"\n  }\n\n  return (\n    <div>\n      <table>\n        <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              topHeaders[column.id] ?\n              <th {...column.getHeaderProps()}>\n                {topHeaders[column.id]}\n                <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n              </th> : null\n            ))}\n          </tr>\n        ))}\n        </thead>\n      </table>\n      <table {...getTableProps()}>\n        <thead>\n          <tr>\n            <th\n              colSpan={visibleColumns.length}\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n            </th>\n          </tr>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                column.id !== 'version_type' ?\n                <th className=\"th\" {...column.getHeaderProps()}>\n                  {column.render(\"Header\")}\n                </th> : null\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return cell.column.Header !== 'VersionType' ? <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td> :  null\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}